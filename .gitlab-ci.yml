image:
  name: gitlab.cs.wallawalla.edu:5050/robotics-club/rover:latest
  entrypoint: [""]

variables:
  GIT_SUBMODULE_STRATEGY: normal

stages:
  - analysis
  - build
  - deploy

run_cpplint:
  stage: analysis
  tags:
    - docker
  script:
    - cd Arduino
    - find -name '*.h' -not -path "*/.pio/*" -exec cpplint --filter=-legal/copyright,-build/include,-runtime/threadsafe_fn {} +
    - find -name '*.cpp' -not -path "*/.pio/*" -exec cpplint --filter=-legal/copyright,-build/include,-runtime/threadsafe_fn {} +

run_cppcheck:
  stage: analysis
  tags:
    - docker
  script:
    - cd Arduino
    - find -name '*.h' -exec cppcheck --enable=all --suppress=missingIncludeSystem --language=c++ {} +
    - find -name '*.cpp' -exec cppcheck --enable=all --suppress=missingIncludeSystem --language=c++ {} +

run_pylint:
  stage: analysis
  tags:
    - docker
  script:
    - cd ROS/src/rover_core
    - find -name '*.py' -exec echo {} \; -exec pylint {} \;

build_arduino:
  stage: build
  tags:
    - docker
  script:
    - cd Arduino
    - cd ROS-motor-control 
    - platformio run --environment auto-deploy
    - cd ..

generate_cert:
  stage: deploy
  tags:
    - rover_remote
  script:
    - cd nginx
    - bash generate-cert.sh
  only:
    refs:
      - master

deploy_docker:
  stage: deploy
  tags:
    - rover_remote
  script:
    - docker-compose -f docker-compose.yml -f docker-compose-usb.yml up -d --build
  only:
    refs:
      - master

upload_arduino:
  stage: deploy
  tags:
    - rover_remote
  script:
    # todo: do this in docker container
    - cd Arduino
    - cd ROS-motor-control 
    - platformio run --environment auto-deploy --target upload
    - cd ..
  when: manual
#  only:
#    refs:
#      - master
